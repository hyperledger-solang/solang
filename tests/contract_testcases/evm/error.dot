strict digraph "tests/contract_testcases/evm/error.sol" {
	E1 [label="name:E1\ntests/contract_testcases/evm/error.sol:2:7-9\nfield name:bar ty:int256\nfield name: ty:bool"]
	E2 [label="name:E2\ntests/contract_testcases/evm/error.sol:3:7-9\nfield name:bar ty:int256\nfield name:foo ty:bool"]
	E3 [label="name:E3\ncontract: 0\ntests/contract_testcases/evm/error.sol:6:8-10\nfield name:bar ty:int256\nfield name:foo ty:bool"]
	E4 [label="name:E4\ncontract: 1\ntests/contract_testcases/evm/error.sol:10:8-10\nfield name:bar ty:int256\nfield name:foo ty:bool"]
	contract [label="contract e\ntests/contract_testcases/evm/error.sol:5:1-7:2"]
	contract_7 [label="contract c\ntests/contract_testcases/evm/error.sol:9:1-38:2"]
	base [label="base e\ntests/contract_testcases/evm/error.sol:9:15-16"]
	named1 [label="function named1\ncontract: c\ntests/contract_testcases/evm/error.sol:12:2-26\nsignature named1()\nvisibility public\nmutability nonpayable"]
	if [label="if\ntests/contract_testcases/evm/error.sol:13:3-23:4"]
	not [label="not\ntests/contract_testcases/evm/error.sol:13:7-13"]
	equal [label="equal\ntests/contract_testcases/evm/error.sol:13:7-13"]
	number_literal [label="uint8 literal: 1\ntests/contract_testcases/evm/error.sol:13:7-8"]
	number_literal_14 [label="uint8 literal: 0\ntests/contract_testcases/evm/error.sol:13:12-13"]
	revert [label="revert\nerror E1\ntests/contract_testcases/evm/error.sol:14:4-34"]
	number_literal_16 [label="int256 literal: 1\ntests/contract_testcases/evm/error.sol:14:20-21"]
	if_17 [label="if\ntests/contract_testcases/evm/error.sol:15:10-23:4"]
	not_18 [label="not\ntests/contract_testcases/evm/error.sol:15:14-20"]
	equal_19 [label="equal\ntests/contract_testcases/evm/error.sol:15:14-20"]
	number_literal_20 [label="uint8 literal: 1\ntests/contract_testcases/evm/error.sol:15:14-15"]
	number_literal_21 [label="uint8 literal: 0\ntests/contract_testcases/evm/error.sol:15:19-20"]
	revert_22 [label="revert\nerror E2\ntests/contract_testcases/evm/error.sol:16:4-23"]
	number_literal_23 [label="int256 literal: 1\ntests/contract_testcases/evm/error.sol:16:20-21"]
	if_24 [label="if\ntests/contract_testcases/evm/error.sol:17:10-23:4"]
	not_25 [label="not\ntests/contract_testcases/evm/error.sol:17:14-20"]
	equal_26 [label="equal\ntests/contract_testcases/evm/error.sol:17:14-20"]
	number_literal_27 [label="uint8 literal: 1\ntests/contract_testcases/evm/error.sol:17:14-15"]
	number_literal_28 [label="uint8 literal: 0\ntests/contract_testcases/evm/error.sol:17:19-20"]
	revert_29 [label="revert\nerror e.E3\ntests/contract_testcases/evm/error.sol:18:4-46"]
	number_literal_30 [label="int256 literal: 1\ntests/contract_testcases/evm/error.sol:18:20-21"]
	bool_literal [label="bool literal: true\ntests/contract_testcases/evm/error.sol:18:28-32"]
	if_32 [label="if\ntests/contract_testcases/evm/error.sol:19:10-23:4"]
	not_33 [label="not\ntests/contract_testcases/evm/error.sol:19:14-20"]
	equal_34 [label="equal\ntests/contract_testcases/evm/error.sol:19:14-20"]
	number_literal_35 [label="uint8 literal: 1\ntests/contract_testcases/evm/error.sol:19:14-15"]
	number_literal_36 [label="uint8 literal: 0\ntests/contract_testcases/evm/error.sol:19:19-20"]
	revert_37 [label="revert\nerror e.E3\ntests/contract_testcases/evm/error.sol:20:4-48"]
	number_literal_38 [label="int256 literal: 1\ntests/contract_testcases/evm/error.sol:20:22-23"]
	bool_literal_39 [label="bool literal: true\ntests/contract_testcases/evm/error.sol:20:30-34"]
	revert_40 [label="revert\nerror c.E4\ntests/contract_testcases/evm/error.sol:22:4-34"]
	number_literal_41 [label="int256 literal: 2\ntests/contract_testcases/evm/error.sol:22:20-21"]
	pos1 [label="function pos1\ncontract: c\ntests/contract_testcases/evm/error.sol:26:2-24\nsignature pos1()\nvisibility public\nmutability nonpayable"]
	if_43 [label="if\ntests/contract_testcases/evm/error.sol:27:3-35:4"]
	not_44 [label="not\ntests/contract_testcases/evm/error.sol:27:7-13"]
	equal_45 [label="equal\ntests/contract_testcases/evm/error.sol:27:7-13"]
	number_literal_46 [label="uint8 literal: 1\ntests/contract_testcases/evm/error.sol:27:7-8"]
	number_literal_47 [label="uint8 literal: 0\ntests/contract_testcases/evm/error.sol:27:12-13"]
	revert_48 [label="revert\nerror E1\ntests/contract_testcases/evm/error.sol:28:4-27"]
	bool_literal_49 [label="bool literal: false\ntests/contract_testcases/evm/error.sol:28:21-26"]
	if_50 [label="if\ntests/contract_testcases/evm/error.sol:29:10-35:4"]
	not_51 [label="not\ntests/contract_testcases/evm/error.sol:29:14-20"]
	equal_52 [label="equal\ntests/contract_testcases/evm/error.sol:29:14-20"]
	number_literal_53 [label="uint8 literal: 1\ntests/contract_testcases/evm/error.sol:29:14-15"]
	number_literal_54 [label="uint8 literal: 0\ntests/contract_testcases/evm/error.sol:29:19-20"]
	revert_55 [label="revert\nerror E2\ntests/contract_testcases/evm/error.sol:30:4-16"]
	number_literal_56 [label="int256 literal: 1\ntests/contract_testcases/evm/error.sol:30:14-15"]
	if_57 [label="if\ntests/contract_testcases/evm/error.sol:31:10-35:4"]
	not_58 [label="not\ntests/contract_testcases/evm/error.sol:31:14-20"]
	equal_59 [label="equal\ntests/contract_testcases/evm/error.sol:31:14-20"]
	number_literal_60 [label="uint8 literal: 1\ntests/contract_testcases/evm/error.sol:31:14-15"]
	number_literal_61 [label="uint8 literal: 0\ntests/contract_testcases/evm/error.sol:31:19-20"]
	revert_62 [label="revert\nerror E2\ntests/contract_testcases/evm/error.sol:32:4-31"]
	number_literal_63 [label="int256 literal: 1\ntests/contract_testcases/evm/error.sol:32:16-17"]
	bool_literal_64 [label="bool literal: true\ntests/contract_testcases/evm/error.sol:32:19-23"]
	revert_65 [label="revert\nerror e.E3\ntests/contract_testcases/evm/error.sol:34:4-22"]
	number_literal_66 [label="int256 literal: 2\ntests/contract_testcases/evm/error.sol:34:14-15"]
	bool_literal_67 [label="bool literal: true\ntests/contract_testcases/evm/error.sol:34:17-21"]
	diagnostic [label="found contract 'e'\nlevel Debug\ntests/contract_testcases/evm/error.sol:5:1-7:2"]
	diagnostic_70 [label="found contract 'c'\nlevel Debug\ntests/contract_testcases/evm/error.sol:9:1-38:2"]
	diagnostic_71 [label="error 'E1' has 1 unnamed fields\nlevel Error\ntests/contract_testcases/evm/error.sol:14:11-13"]
	note [label="definition of 'E1'\ntests/contract_testcases/evm/error.sol:2:7-9"]
	diagnostic_73 [label="error 'E1' has no field called 'foo'\nlevel Error\ntests/contract_testcases/evm/error.sol:14:23-26"]
	note_74 [label="definition of 'E1'\ntests/contract_testcases/evm/error.sol:2:7-9"]
	diagnostic_75 [label="missing field 'foo'\nlevel Error\ntests/contract_testcases/evm/error.sol:16:11-13"]
	note_76 [label="definition of 'E2'\ntests/contract_testcases/evm/error.sol:3:7-9"]
	diagnostic_77 [label="error 'E3' has no field called 'baz'\nlevel Error\ntests/contract_testcases/evm/error.sol:18:34-37"]
	note_78 [label="definition of 'E3'\ntests/contract_testcases/evm/error.sol:6:8-10"]
	diagnostic_79 [label="duplicate argument with name 'foo'\nlevel Error\ntests/contract_testcases/evm/error.sol:20:36-39"]
	diagnostic_80 [label="missing field 'foo'\nlevel Error\ntests/contract_testcases/evm/error.sol:22:11-13"]
	note_81 [label="definition of 'E4'\ntests/contract_testcases/evm/error.sol:10:8-10"]
	diagnostic_82 [label="error 'E4' has no field called 'baz'\nlevel Error\ntests/contract_testcases/evm/error.sol:22:23-26"]
	note_83 [label="definition of 'E4'\ntests/contract_testcases/evm/error.sol:10:8-10"]
	diagnostic_84 [label="implicit conversion to int256 from bytes3 not allowed\nlevel Error\ntests/contract_testcases/evm/error.sol:28:14-19"]
	diagnostic_85 [label="error 'E2' has 2 fields, 1 provided\nlevel Error\ntests/contract_testcases/evm/error.sol:30:11-13"]
	note_86 [label="definition of 'E2'\ntests/contract_testcases/evm/error.sol:3:7-9"]
	diagnostic_87 [label="error 'E2' has 2 fields, 3 provided\nlevel Error\ntests/contract_testcases/evm/error.sol:32:11-15"]
	note_88 [label="definition of 'E2'\ntests/contract_testcases/evm/error.sol:3:7-9"]
	errors -> E1
	errors -> E2
	errors -> E3
	errors -> E4
	contracts -> contract
	contracts -> contract_7
	contract_7 -> base [label="base"]
	contract_7 -> named1 [label="function"]
	named1 -> if [label="body"]
	if -> not [label="cond"]
	not -> equal [label="expr"]
	equal -> number_literal [label="left"]
	equal -> number_literal_14 [label="right"]
	if -> revert [label="then"]
	revert -> number_literal_16 [label="arg #0"]
	if -> if_17 [label="else"]
	if_17 -> not_18 [label="cond"]
	not_18 -> equal_19 [label="expr"]
	equal_19 -> number_literal_20 [label="left"]
	equal_19 -> number_literal_21 [label="right"]
	if_17 -> revert_22 [label="then"]
	revert_22 -> number_literal_23 [label="arg #0"]
	if_17 -> if_24 [label="else"]
	if_24 -> not_25 [label="cond"]
	not_25 -> equal_26 [label="expr"]
	equal_26 -> number_literal_27 [label="left"]
	equal_26 -> number_literal_28 [label="right"]
	if_24 -> revert_29 [label="then"]
	revert_29 -> number_literal_30 [label="arg #0"]
	revert_29 -> bool_literal [label="arg #1"]
	if_24 -> if_32 [label="else"]
	if_32 -> not_33 [label="cond"]
	not_33 -> equal_34 [label="expr"]
	equal_34 -> number_literal_35 [label="left"]
	equal_34 -> number_literal_36 [label="right"]
	if_32 -> revert_37 [label="then"]
	revert_37 -> number_literal_38 [label="arg #0"]
	revert_37 -> bool_literal_39 [label="arg #1"]
	if_32 -> revert_40 [label="else"]
	revert_40 -> number_literal_41 [label="arg #0"]
	contract_7 -> pos1 [label="function"]
	pos1 -> if_43 [label="body"]
	if_43 -> not_44 [label="cond"]
	not_44 -> equal_45 [label="expr"]
	equal_45 -> number_literal_46 [label="left"]
	equal_45 -> number_literal_47 [label="right"]
	if_43 -> revert_48 [label="then"]
	revert_48 -> bool_literal_49 [label="arg #0"]
	if_43 -> if_50 [label="else"]
	if_50 -> not_51 [label="cond"]
	not_51 -> equal_52 [label="expr"]
	equal_52 -> number_literal_53 [label="left"]
	equal_52 -> number_literal_54 [label="right"]
	if_50 -> revert_55 [label="then"]
	revert_55 -> number_literal_56 [label="arg #0"]
	if_50 -> if_57 [label="else"]
	if_57 -> not_58 [label="cond"]
	not_58 -> equal_59 [label="expr"]
	equal_59 -> number_literal_60 [label="left"]
	equal_59 -> number_literal_61 [label="right"]
	if_57 -> revert_62 [label="then"]
	revert_62 -> number_literal_63 [label="arg #0"]
	revert_62 -> bool_literal_64 [label="arg #1"]
	if_57 -> revert_65 [label="else"]
	revert_65 -> number_literal_66 [label="arg #0"]
	revert_65 -> bool_literal_67 [label="arg #1"]
	diagnostics -> diagnostic [label="Debug"]
	diagnostics -> diagnostic_70 [label="Debug"]
	diagnostics -> diagnostic_71 [label="Error"]
	diagnostic_71 -> note [label="note"]
	diagnostics -> diagnostic_73 [label="Error"]
	diagnostic_73 -> note_74 [label="note"]
	diagnostics -> diagnostic_75 [label="Error"]
	diagnostic_75 -> note_76 [label="note"]
	diagnostics -> diagnostic_77 [label="Error"]
	diagnostic_77 -> note_78 [label="note"]
	diagnostics -> diagnostic_79 [label="Error"]
	diagnostics -> diagnostic_80 [label="Error"]
	diagnostic_80 -> note_81 [label="note"]
	diagnostics -> diagnostic_82 [label="Error"]
	diagnostic_82 -> note_83 [label="note"]
	diagnostics -> diagnostic_84 [label="Error"]
	diagnostics -> diagnostic_85 [label="Error"]
	diagnostic_85 -> note_86 [label="note"]
	diagnostics -> diagnostic_87 [label="Error"]
	diagnostic_87 -> note_88 [label="note"]
}
