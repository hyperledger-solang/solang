strict digraph "tests/contract_testcases/solana/bad_seeds_on_external_call.sol" {
	contract [label="contract c\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:2:1-25:2"]
	var [label="variable zero\nvisibility internal\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:4:2-27"]
	number_literal [label="address literal: 0\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:4:17-27"]
	test1 [label="function test1\ncontract: c\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:6:2-25\nsignature test1()\nvisibility public\nmutability nonpayable"]
	diagnostic [label="found contract 'c'\nlevel Debug\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:2:1-25:2"]
	diagnostic_7 [label="type bytes1 found where array of slices expected\nlevel Error\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:13:4-7"]
	diagnostic_8 [label="expected 'bytes1 slice[]', found integer\nlevel Error\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:15:4-5"]
	diagnostic_9 [label="type string found where array of slices expected\nlevel Error\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:16:4-5"]
	diagnostic_10 [label="type bytes2 found where array of slices expected\nlevel Error\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:17:4-13"]
	diagnostic_11 [label="type bytes found where array of slices expected\nlevel Error\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:18:4-5"]
	diagnostic_12 [label="expected 'bytes1 slice', found integer\nlevel Error\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:20:5-6"]
	diagnostic_13 [label="conversion from struct AccountMeta[1] to bytes1 slice not possible\nlevel Error\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:21:5-10"]
	diagnostic_14 [label="type bytes1 slice found where array bytes1 slice expected\nlevel Error\ntests/contract_testcases/solana/bad_seeds_on_external_call.sol:22:4-15"]
	contracts -> contract
	contract -> var [label="variable"]
	var -> number_literal [label="initializer"]
	contract -> test1 [label="function"]
	diagnostics -> diagnostic [label="Debug"]
	diagnostics -> diagnostic_7 [label="Error"]
	diagnostics -> diagnostic_8 [label="Error"]
	diagnostics -> diagnostic_9 [label="Error"]
	diagnostics -> diagnostic_10 [label="Error"]
	diagnostics -> diagnostic_11 [label="Error"]
	diagnostics -> diagnostic_12 [label="Error"]
	diagnostics -> diagnostic_13 [label="Error"]
	diagnostics -> diagnostic_14 [label="Error"]
}
