strict digraph "tests/contract_testcases/solana/using_import.sol" {
	S [label="name:S\ntests/contract_testcases/solana/simple.sol:3:8-9\nfield name:f1 ty:int64\nfield name:f2 ty:bool"]
	contract [label="contract c\ntests/contract_testcases/solana/using_import.sol:5:1-11:2"]
	test [label="function test\ncontract: c\ntests/contract_testcases/solana/using_import.sol:7:2-35\nsignature test((int64,bool))\nvisibility public\nmutability nonpayable"]
	parameters [label="parameters\nstruct S s"]
	expr [label="expression\ntests/contract_testcases/solana/using_import.sol:8:3-10"]
	call_internal_function [label="call internal function\ntests/contract_testcases/solana/using_import.sol:8:3-10"]
	internal_function [label="function(struct S) internal pure returns (void)\nfree function inc\ntests/contract_testcases/solana/using_import.sol:8:3-10"]
	variable [label="variable: s\nstruct S\ntests/contract_testcases/solana/using_import.sol:8:3-4"]
	expr_10 [label="expression\ntests/contract_testcases/solana/using_import.sol:9:3-10"]
	call_internal_function_11 [label="call internal function\ntests/contract_testcases/solana/using_import.sol:9:3-10"]
	internal_function_12 [label="function(struct S) internal pure returns (void)\nfree function dec\ntests/contract_testcases/solana/using_import.sol:9:3-10"]
	variable_13 [label="variable: s\nstruct S\ntests/contract_testcases/solana/using_import.sol:9:3-4"]
	contract_14 [label="contract A\ntests/contract_testcases/solana/simple.sol:1:1-14"]
	contract_15 [label="contract L\ntests/contract_testcases/solana/simple.sol:1:14-2:13"]
	diagnostic [label="found contract 'c'\nlevel Debug\ntests/contract_testcases/solana/using_import.sol:5:1-11:2"]
	diagnostic_18 [label="function can be declared 'pure'\nlevel Warning\ntests/contract_testcases/solana/using_import.sol:7:2-35"]
	diagnostic_19 [label="found contract 'A'\nlevel Debug\ntests/contract_testcases/solana/simple.sol:1:1-14"]
	diagnostic_20 [label="found library 'L'\nlevel Debug\ntests/contract_testcases/solana/simple.sol:1:14-2:13"]
	structs -> S
	contracts -> contract
	contract -> test [label="function"]
	test -> parameters [label="parameters"]
	test -> expr [label="body"]
	expr -> call_internal_function [label="expr"]
	call_internal_function -> internal_function [label="function"]
	call_internal_function -> variable [label="arg #0"]
	expr -> expr_10 [label="next"]
	expr_10 -> call_internal_function_11 [label="expr"]
	call_internal_function_11 -> internal_function_12 [label="function"]
	call_internal_function_11 -> variable_13 [label="arg #0"]
	contracts -> contract_14
	contracts -> contract_15
	diagnostics -> diagnostic [label="Debug"]
	diagnostics -> diagnostic_18 [label="Warning"]
	diagnostics -> diagnostic_19 [label="Debug"]
	diagnostics -> diagnostic_20 [label="Debug"]
}
