strict digraph "tests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol" {
	contract [label="contract foo\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:2:9-8:10"]
	test [label="function test\ncontract: foo\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:3:13-35\nsignature test()\nvisibility public\nmutability nonpayable"]
	var_decl [label="variable decl int32[] a\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:4:17-51"]
	alloc_array [label="alloc array int32[]\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:4:36-51"]
	number_literal [label="uint32 literal: -1\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:4:48-50"]
	expr [label="expression\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:6:17-38"]
	builtins [label="builtin Assert\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:6:17-23"]
	equal [label="equal\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:6:24-37"]
	builtins_9 [label="builtin ArrayLength\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:6:24-32"]
	variable [label="variable: a\nint32[]\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:6:24-25"]
	number_literal_11 [label="uint32 literal: 5\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:6:36-37"]
	diagnostic [label="found contract 'foo'\nlevel Debug\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:2:9-8:10"]
	diagnostic_14 [label="negative value -1 does not fit into type uint32. Cannot implicitly convert signed literal to unsigned type.\nlevel Error\ntests/contract_testcases/substrate/arrays/memory_dynamic_array_new_03.sol:4:48-50"]
	contracts -> contract
	contract -> test [label="function"]
	test -> var_decl [label="body"]
	var_decl -> alloc_array [label="init"]
	alloc_array -> number_literal [label="length"]
	var_decl -> expr [label="next"]
	expr -> builtins [label="expr"]
	builtins -> equal [label="arg #0"]
	equal -> builtins_9 [label="left"]
	builtins_9 -> variable [label="arg #0"]
	equal -> number_literal_11 [label="right"]
	diagnostics -> diagnostic [label="Debug"]
	diagnostics -> diagnostic_14 [label="Error"]
}
