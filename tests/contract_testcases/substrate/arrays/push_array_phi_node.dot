strict digraph "tests/contract_testcases/substrate/arrays/push_array_phi_node.sol" {
	contract [label="contract Array_bound_Test\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:1:1-18:2"]
	array_bound [label="function array_bound\ncontract: Array_bound_Test\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:2:5-57\nsignature array_bound()\nvisibility public\nmutability pure"]
	returns [label="returns\nuint256 "]
	var_decl [label="variable decl uint256[] a\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:3:9-40"]
	alloc_array [label="alloc array uint256[]\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:3:23-40"]
	number_literal [label="uint32 literal: 10\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:3:37-39"]
	var_decl_7 [label="variable decl uint256 sum\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:4:9-24"]
	number_literal_8 [label="uint256 literal: 0\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:4:23-24"]
	if [label="if\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:6:9-10:3"]
	more [label="more\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:6:13-16"]
	number_literal_11 [label="uint8 literal: 2\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:6:13-14"]
	number_literal_12 [label="uint8 literal: 1\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:6:15-16"]
	expr [label="expression\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:7:6-15"]
	builtins [label="builtin ArrayPush\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:7:6-15"]
	variable [label="variable: a\nuint256[]\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:7:6-7"]
	number_literal_16 [label="uint256 literal: 5\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:7:13-14"]
	expr_17 [label="expression\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:9:6-13"]
	builtins_18 [label="builtin ArrayPop\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:9:6-13"]
	variable_19 [label="variable: a\nuint256[]\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:9:6-7"]
	for [label="for\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:12:9-14:3"]
	var_decl_21 [label="variable decl uint256 i\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:12:14-27"]
	number_literal_22 [label="uint256 literal: 0\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:12:26-27"]
	less [label="less\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:12:29-41"]
	variable_24 [label="variable: i\nuint256\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:12:29-30"]
	zero_ext [label="zero extend uint256\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:12:33-41"]
	builtins_26 [label="builtin ArrayLength\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:12:33-41"]
	variable_27 [label="variable: a\nuint256[]\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:12:33-34"]
	post_increment [label="post increment\nuint256\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:12:43-46"]
	variable_29 [label="variable: i\nuint256\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:12:43-44"]
	expr_30 [label="expression\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:13:6-23"]
	assign [label="assign\nuint256\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:13:6-23"]
	variable_32 [label="variable: sum\nuint256\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:13:6-9"]
	add [label="add\nuint256\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:13:12-23"]
	variable_34 [label="variable: sum\nuint256\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:13:12-15"]
	load [label="load uint256\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:13:18-23"]
	subscript [label="subscript uint256[]\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:13:18-23"]
	variable_37 [label="variable: a\nuint256[]\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:13:18-19"]
	number_literal_38 [label="uint32 literal: 10\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:13:20-22"]
	return [label="return\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:16:9-19"]
	variable_40 [label="variable: sum\nuint256\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:16:16-19"]
	diagnostic [label="found contract 'Array_bound_Test'\nlevel Debug\ntests/contract_testcases/substrate/arrays/push_array_phi_node.sol:1:1-18:2"]
	contracts -> contract
	contract -> array_bound [label="function"]
	array_bound -> returns [label="returns"]
	array_bound -> var_decl [label="body"]
	var_decl -> alloc_array [label="init"]
	alloc_array -> number_literal [label="length"]
	var_decl -> var_decl_7 [label="next"]
	var_decl_7 -> number_literal_8 [label="init"]
	var_decl_7 -> if [label="next"]
	if -> more [label="cond"]
	more -> number_literal_11 [label="left"]
	more -> number_literal_12 [label="right"]
	if -> expr [label="then"]
	expr -> builtins [label="expr"]
	builtins -> variable [label="arg #0"]
	builtins -> number_literal_16 [label="arg #1"]
	if -> expr_17 [label="else"]
	expr_17 -> builtins_18 [label="expr"]
	builtins_18 -> variable_19 [label="arg #0"]
	if -> for [label="next"]
	for -> var_decl_21 [label="init"]
	var_decl_21 -> number_literal_22 [label="init"]
	for -> less [label="cond"]
	less -> variable_24 [label="left"]
	less -> zero_ext [label="right"]
	zero_ext -> builtins_26 [label="expr"]
	builtins_26 -> variable_27 [label="arg #0"]
	for -> post_increment [label="next"]
	post_increment -> variable_29 [label="expr"]
	for -> expr_30 [label="body"]
	expr_30 -> assign [label="expr"]
	assign -> variable_32 [label="left"]
	assign -> add [label="right"]
	add -> variable_34 [label="left"]
	add -> load [label="right"]
	load -> subscript [label="expr"]
	subscript -> variable_37 [label="array"]
	subscript -> number_literal_38 [label="index"]
	for -> return [label="next"]
	return -> variable_40 [label="expr"]
	diagnostics -> diagnostic [label="Debug"]
}
