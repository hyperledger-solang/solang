strict digraph "tests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol" {
	contract [label="contract c\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:2:9-13:10"]
	test [label="function test\ncontract: c\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:3:13-35\nsignature test()\nvisibility public\nmutability nonpayable"]
	contract_3 [label="contract other\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:15:9-19:10"]
	test_4 [label="function test\ncontract: other\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:16:13-57\nsignature test()\nvisibility public\nmutability nonpayable"]
	returns [label="returns\nint32 \nbool "]
	return [label="return\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:17:17-35"]
	list [label="list\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:17:17-35"]
	number_literal [label="int32 literal: 102\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:17:25-28"]
	bool_literal [label="bool literal: true\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:17:30-34"]
	diagnostic [label="found contract 'c'\nlevel Debug\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:2:9-13:10"]
	diagnostic_12 [label="x is already declared\nlevel Error\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:6:45-46"]
	note [label="location of previous declaration\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:5:23-24"]
	diagnostic_14 [label="catch can only take ‘bytes memory’, not 'string'\nlevel Error\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:8:26-32"]
	diagnostic_15 [label="found contract 'other'\nlevel Debug\ntests/contract_testcases/substrate/calls/try_catch_external_calls_03.sol:15:9-19:10"]
	contracts -> contract
	contract -> test [label="function"]
	contracts -> contract_3
	contract_3 -> test_4 [label="function"]
	test_4 -> returns [label="returns"]
	test_4 -> return [label="body"]
	return -> list [label="expr"]
	list -> number_literal [label="entry #0"]
	list -> bool_literal [label="entry #1"]
	diagnostics -> diagnostic [label="Debug"]
	diagnostics -> diagnostic_12 [label="Error"]
	diagnostic_12 -> note [label="note"]
	diagnostics -> diagnostic_14 [label="Error"]
	diagnostics -> diagnostic_15 [label="Debug"]
}
