strict digraph "tests/contract_testcases/substrate/functions/fallback.sol" {
	contract [label="contract test\ntests/contract_testcases/substrate/functions/fallback.sol:2:9-23"]
	var [label="variable result\nvisibility internal\ntests/contract_testcases/substrate/functions/fallback.sol:3:13-31"]
	number_literal [label="int64 literal: 102\ntests/contract_testcases/substrate/functions/fallback.sol:3:28-31"]
	get [label="function get\ncontract: test\ntests/contract_testcases/substrate/functions/fallback.sol:5:13-50\nsignature get()\nvisibility public\nmutability nonpayable"]
	returns [label="returns\nint64 "]
	return [label="return\ntests/contract_testcases/substrate/functions/fallback.sol:6:17-30"]
	storage_load [label="storage load int64\ntests/contract_testcases/substrate/functions/fallback.sol:6:17-30"]
	storage_var [label="storage variable\ntest.result\nint64 storage\ntests/contract_testcases/substrate/functions/fallback.sol:6:24-30"]
	diagnostic [label="found contract 'test'\nlevel Debug\ntests/contract_testcases/substrate/functions/fallback.sol:2:9-23"]
	diagnostic_11 [label="function is missing a name. A function without a name is syntax for 'fallback() external' or 'receive() external' in older versions of the Solidity language, see https://solang.readthedocs.io/en/latest/language.html#fallback-and-receive-function\nlevel Error\ntests/contract_testcases/substrate/functions/fallback.sol:9:13-32"]
	contracts -> contract
	contract -> var [label="variable"]
	var -> number_literal [label="initializer"]
	contract -> get [label="function"]
	get -> returns [label="returns"]
	get -> return [label="body"]
	return -> storage_load [label="expr"]
	storage_load -> storage_var [label="expr"]
	diagnostics -> diagnostic [label="Debug"]
	diagnostics -> diagnostic_11 [label="Error"]
}
