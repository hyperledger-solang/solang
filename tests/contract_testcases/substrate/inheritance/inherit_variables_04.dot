strict digraph "tests/contract_testcases/substrate/inheritance/inherit_variables_04.sol" {
	contract [label="contract a\ntests/contract_testcases/substrate/inheritance/inherit_variables_04.sol:2:9-20"]
	var [label="variable foo\nvisibility public\nconstant\ntests/contract_testcases/substrate/inheritance/inherit_variables_04.sol:3:13-45"]
	number_literal [label="int256 literal: 49150\ntests/contract_testcases/substrate/inheritance/inherit_variables_04.sol:3:39-45"]
	foo [label="function foo\ncontract: a\ntests/contract_testcases/substrate/inheritance/inherit_variables_04.sol:3:33-36\nsignature foo()\nvisibility public\nmutability view"]
	returns [label="returns\nint256 "]
	return [label="return\nimplicit"]
	constant [label="constant variable\na.foo\nint256\nimplicit"]
	contract_8 [label="contract c\ntests/contract_testcases/substrate/inheritance/inherit_variables_04.sol:6:9-24"]
	base [label="base a\ntests/contract_testcases/substrate/inheritance/inherit_variables_04.sol:6:23-24"]
	getFoo [label="function getFoo\ncontract: c\ntests/contract_testcases/substrate/inheritance/inherit_variables_04.sol:7:13-51\nsignature getFoo()\nvisibility public\nmutability nonpayable"]
	returns_11 [label="returns\nint256 "]
	return_12 [label="return\ntests/contract_testcases/substrate/inheritance/inherit_variables_04.sol:8:17-27"]
	constant_13 [label="constant variable\na.foo\nint256\ntests/contract_testcases/substrate/inheritance/inherit_variables_04.sol:8:24-27"]
	diagnostic [label="found contract ‘a’\nlevel Debug\ntests/contract_testcases/substrate/inheritance/inherit_variables_04.sol:2:9-20"]
	diagnostic_16 [label="found contract ‘c’\nlevel Debug\ntests/contract_testcases/substrate/inheritance/inherit_variables_04.sol:6:9-24"]
	diagnostic_17 [label="function can be declared ‘pure’\nlevel Warning\ntests/contract_testcases/substrate/inheritance/inherit_variables_04.sol:7:13-51"]
	contracts -> contract
	contract -> var [label="variable"]
	var -> number_literal [label="initializer"]
	contract -> foo [label="function"]
	foo -> returns [label="returns"]
	foo -> return [label="body"]
	return -> constant [label="expr"]
	contracts -> contract_8
	contract_8 -> base [label="base"]
	contract_8 -> getFoo [label="function"]
	getFoo -> returns_11 [label="returns"]
	getFoo -> return_12 [label="body"]
	return_12 -> constant_13 [label="expr"]
	diagnostics -> diagnostic [label="Debug"]
	diagnostics -> diagnostic_16 [label="Debug"]
	diagnostics -> diagnostic_17 [label="Warning"]
}
