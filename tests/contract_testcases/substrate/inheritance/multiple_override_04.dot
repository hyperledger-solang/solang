strict digraph "tests/contract_testcases/substrate/inheritance/multiple_override_04.sol" {
	contract [label="contract base\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:2:9-6:10"]
	base [label="base bar\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:2:26-29"]
	base_3 [label="base bar2\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:2:31-35"]
	foo [label="function foo\ncontract: base\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:3:13-61\nsignature foo(uint64)\nvisibility internal\nmutability nonpayable"]
	parameters [label="parameters\nuint64 a"]
	returns [label="returns\nuint64 "]
	return [label="return\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:4:17-31"]
	add [label="add\nuint64\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:4:24-31"]
	variable [label="variable: a\nuint64\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:4:24-25"]
	number_literal [label="uint64 literal: 102\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:4:28-31"]
	contract_11 [label="contract bar\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:8:9-12:10"]
	foo_12 [label="function foo\ncontract: bar\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:9:13-69\nsignature foo(uint64)\nvisibility internal\nmutability nonpayable\nvirtual"]
	parameters_13 [label="parameters\nuint64 a"]
	returns_14 [label="returns\nuint64 "]
	return_15 [label="return\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:10:17-31"]
	add_16 [label="add\nuint64\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:10:24-31"]
	variable_17 [label="variable: a\nuint64\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:10:24-25"]
	number_literal_18 [label="uint64 literal: 102\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:10:28-31"]
	contract_19 [label="contract bar2\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:14:9-18:10"]
	foo_20 [label="function foo\ncontract: bar2\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:15:13-69\nsignature foo(uint64)\nvisibility internal\nmutability nonpayable\nvirtual"]
	parameters_21 [label="parameters\nuint64 a"]
	returns_22 [label="returns\nuint64 "]
	return_23 [label="return\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:16:17-31"]
	add_24 [label="add\nuint64\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:16:24-31"]
	variable_25 [label="variable: a\nuint64\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:16:24-25"]
	number_literal_26 [label="uint64 literal: 103\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:16:28-31"]
	diagnostic [label="found contract 'base'\nlevel Debug\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:2:9-6:10"]
	diagnostic_29 [label="function 'foo' should specify override list 'override(bar2,bar)'\nlevel Error\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:3:13-61"]
	diagnostic_30 [label="found contract 'bar'\nlevel Debug\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:8:9-12:10"]
	diagnostic_31 [label="found contract 'bar2'\nlevel Debug\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:14:9-18:10"]
	diagnostic_32 [label="function 'foo' with this signature already defined\nlevel Error\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:15:13-69"]
	note [label="previous definition of function 'foo'\ntests/contract_testcases/substrate/inheritance/multiple_override_04.sol:9:13-69"]
	contracts -> contract
	contract -> base [label="base"]
	contract -> base_3 [label="base"]
	contract -> foo [label="function"]
	foo -> parameters [label="parameters"]
	foo -> returns [label="returns"]
	foo -> return [label="body"]
	return -> add [label="expr"]
	add -> variable [label="left"]
	add -> number_literal [label="right"]
	contracts -> contract_11
	contract_11 -> foo_12 [label="function"]
	foo_12 -> parameters_13 [label="parameters"]
	foo_12 -> returns_14 [label="returns"]
	foo_12 -> return_15 [label="body"]
	return_15 -> add_16 [label="expr"]
	add_16 -> variable_17 [label="left"]
	add_16 -> number_literal_18 [label="right"]
	contracts -> contract_19
	contract_19 -> foo_20 [label="function"]
	foo_20 -> parameters_21 [label="parameters"]
	foo_20 -> returns_22 [label="returns"]
	foo_20 -> return_23 [label="body"]
	return_23 -> add_24 [label="expr"]
	add_24 -> variable_25 [label="left"]
	add_24 -> number_literal_26 [label="right"]
	diagnostics -> diagnostic [label="Debug"]
	diagnostics -> diagnostic_29 [label="Error"]
	diagnostics -> diagnostic_30 [label="Debug"]
	diagnostics -> diagnostic_31 [label="Debug"]
	diagnostics -> diagnostic_32 [label="Error"]
	diagnostic_32 -> note [label="note"]
}
