strict digraph "tests/contract_testcases/substrate/inheritance/simple_interface.sol" {
	contract [label="contract IFoo\ntests/contract_testcases/substrate/inheritance/simple_interface.sol:2:9-24"]
	bar [label="function bar\ncontract: IFoo\ntests/contract_testcases/substrate/inheritance/simple_interface.sol:3:13-64\nsignature bar(uint32)\nvisibility external\nmutability pure\nvirtual"]
	parameters [label="parameters\nuint32 "]
	returns [label="returns\nuint32 "]
	contract_5 [label="contract foo\ntests/contract_testcases/substrate/inheritance/simple_interface.sol:6:9-29"]
	base [label="base IFoo\ntests/contract_testcases/substrate/inheritance/simple_interface.sol:6:25-29"]
	bar_7 [label="function bar\ncontract: foo\ntests/contract_testcases/substrate/inheritance/simple_interface.sol:7:13-64\nsignature bar(uint32)\nvisibility public\nmutability pure"]
	parameters_8 [label="parameters\nuint32 a"]
	returns_9 [label="returns\nuint32 "]
	return [label="return\ntests/contract_testcases/substrate/inheritance/simple_interface.sol:8:17-29"]
	multiply [label="multiply\nuint32\ntests/contract_testcases/substrate/inheritance/simple_interface.sol:8:26-27"]
	variable [label="variable: a\nuint32\ntests/contract_testcases/substrate/inheritance/simple_interface.sol:8:24-25"]
	number_literal [label="uint32 literal: 2\ntests/contract_testcases/substrate/inheritance/simple_interface.sol:8:28-29"]
	diagnostic [label="found interface 'IFoo'\nlevel Debug\ntests/contract_testcases/substrate/inheritance/simple_interface.sol:2:9-24"]
	diagnostic_16 [label="found contract 'foo'\nlevel Debug\ntests/contract_testcases/substrate/inheritance/simple_interface.sol:6:9-29"]
	contracts -> contract
	contract -> bar [label="function"]
	bar -> parameters [label="parameters"]
	bar -> returns [label="returns"]
	contracts -> contract_5
	contract_5 -> base [label="base"]
	contract_5 -> bar_7 [label="function"]
	bar_7 -> parameters_8 [label="parameters"]
	bar_7 -> returns_9 [label="returns"]
	bar_7 -> return [label="body"]
	return -> multiply [label="expr"]
	multiply -> variable [label="left"]
	multiply -> number_literal [label="right"]
	diagnostics -> diagnostic [label="Debug"]
	diagnostics -> diagnostic_16 [label="Debug"]
}
