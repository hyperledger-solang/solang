strict digraph "tests/contract_testcases/substrate/libraries/using_07.sol" {
	contract [label="contract C\ntests/contract_testcases/substrate/libraries/using_07.sol:10:1-11:12"]
	using [label="using for int256"]
	using_4 [label="using for uint256"]
	using_5 [label="using for int256\nfunction foo3 tests/contract_testcases/substrate/libraries/using_07.sol:3:23-4:35\nfunction foo4 tests/contract_testcases/substrate/libraries/using_07.sol:6:2-7:42"]
	test [label="function test\ncontract: C\ntests/contract_testcases/substrate/libraries/using_07.sol:17:2-29\nsignature test(int256)\nvisibility public\nmutability nonpayable"]
	parameters [label="parameters\nint256 c"]
	var_decl [label="variable decl int256 a\ntests/contract_testcases/substrate/libraries/using_07.sol:18:3-19"]
	call_internal_function [label="call internal function\ntests/contract_testcases/substrate/libraries/using_07.sol:18:11-19"]
	internal_function [label="function(int256) internal returns (int256)\nfree function foo3\ntests/contract_testcases/substrate/libraries/using_07.sol:18:11-19"]
	variable [label="variable: c\nint256\ntests/contract_testcases/substrate/libraries/using_07.sol:18:11-12"]
	expr [label="expression\ntests/contract_testcases/substrate/libraries/using_07.sol:20:3-12"]
	call_internal_function_13 [label="call internal function\ntests/contract_testcases/substrate/libraries/using_07.sol:20:3-12"]
	internal_function_14 [label="function(int256,int256) internal returns (void)\nfree function foo4\ntests/contract_testcases/substrate/libraries/using_07.sol:20:3-12"]
	variable_15 [label="variable: a\nint256\ntests/contract_testcases/substrate/libraries/using_07.sol:20:3-4"]
	number_literal [label="int256 literal: 1\ntests/contract_testcases/substrate/libraries/using_07.sol:20:10-11"]
	diagnostic [label="'global' on using within contract not permitted\nlevel Error\ntests/contract_testcases/substrate/libraries/using_07.sol:12:23-29"]
	diagnostic_19 [label="'foo1' has no arguments, at least one argument required\nlevel Error\ntests/contract_testcases/substrate/libraries/using_07.sol:12:9-13"]
	note [label="definition of 'foo1'\ntests/contract_testcases/substrate/libraries/using_07.sol:1:10-14"]
	diagnostic_21 [label="'feh' not expected, did you mean 'global'?\nlevel Error\ntests/contract_testcases/substrate/libraries/using_07.sol:13:21-24"]
	diagnostic_22 [label="'foo2' is an overloaded function\nlevel Error\ntests/contract_testcases/substrate/libraries/using_07.sol:13:9-13"]
	note_23 [label="definition of 'foo2'\ntests/contract_testcases/substrate/libraries/using_07.sol:2:10-14"]
	note_24 [label="definition of 'foo2'\ntests/contract_testcases/substrate/libraries/using_07.sol:2:22-3:21"]
	diagnostic_25 [label="function cannot be used since first argument is 'int256' rather than the required 'uint256'\nlevel Error\ntests/contract_testcases/substrate/libraries/using_07.sol:14:9-13"]
	note_26 [label="definition of 'foo3'\ntests/contract_testcases/substrate/libraries/using_07.sol:4:10-14"]
	diagnostic_27 [label="found contract 'C'\nlevel Debug\ntests/contract_testcases/substrate/libraries/using_07.sol:10:1-11:12"]
	contracts -> contract
	contract -> using [label="base"]
	contract -> using_3 [label="base"]
	contract -> using_4 [label="base"]
	contract -> using_5 [label="base"]
	contract -> test [label="function"]
	test -> parameters [label="parameters"]
	test -> var_decl [label="body"]
	var_decl -> call_internal_function [label="init"]
	call_internal_function -> internal_function [label="function"]
	call_internal_function -> variable [label="arg #0"]
	var_decl -> expr [label="next"]
	expr -> call_internal_function_13 [label="expr"]
	call_internal_function_13 -> internal_function_14 [label="function"]
	call_internal_function_13 -> variable_15 [label="arg #0"]
	call_internal_function_13 -> number_literal [label="arg #1"]
	diagnostics -> diagnostic [label="Error"]
	diagnostics -> diagnostic_19 [label="Error"]
	diagnostic_19 -> note [label="note"]
	diagnostics -> diagnostic_21 [label="Error"]
	diagnostics -> diagnostic_22 [label="Error"]
	diagnostic_22 -> note_23 [label="note"]
	diagnostic_22 -> note_24 [label="note"]
	diagnostics -> diagnostic_25 [label="Error"]
	diagnostic_25 -> note_26 [label="note"]
	diagnostics -> diagnostic_27 [label="Debug"]
}
